let Koa,Router,mongoose,bodyParser,api,jwtMiddleware;_b69‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_b69‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_b69‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_b69‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_b69‍.w("./api",[["default",["api"],function(v){api=v}]]);_b69‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();









const { PORT, MONGO_URI } = process.env;

// connect to mongoDB
mongoose
  .connect(MONGO_URI, { useNewUrlParser: true, useFindAndModify: false })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((e) => {
    _b69‍.g.console.error(e);
  });

const app = new Koa();
const router = new Router();

app.use(jwtMiddleware);
app.use(bodyParser());

router.use('/api', api.routes());
app.use(router.routes()).use(router.allowedMethods());

app.use((ctx) => {
  ctx.body = 'hello';
});

const port = PORT || 4000;
app.listen(port, () => {
  _b69‍.g.console.log('Listenning to port %d', port);
});
